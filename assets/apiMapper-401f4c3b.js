import{B as l}from"./index-6804c35b.js";class n{constructor(e,a,u){this.params=a||{};try{this.params.access_token=JSON.parse(localStorage.getItem("userInfo")).RandCode||""}catch{this.params.access_token=""}this.type=u||""}async getRequest(e){let a=null,u="";return e.port===10006?u=window.outerLinkDomain:u=window.domain,e.type?a=await l.get(u+e.url,{params:e.params,responseType:"blob"}):a=await l.get(u+e.url,{params:e.params}),new Promise(o=>{o(a.data)})}async postRequest(e){let a="";e.port===10006?a=window.outerLinkDomain:a=window.domain,console.log(a,"domain");const u=await l.post(a+e.url,e.params);return new Promise(o=>{o(u.data)})}async deleteRequest(e){let a="";e.port===10006?a=window.outerLinkDomain:a=window.domain;const u=await l.delete(a+e.url,e.params);return new Promise(o=>{o(u.data)})}}let i=null;function t(){return i||(i=new n,i)}const r={userModule:{login:"/api/sysUser/login_no_captcha",getUserListPage:"/api/sysUser/queryUserPage",saveUser:"/api/sysUser/save",deleteUser:"/api/sysUser/delete",getUserHasRoleList:"/api/sysUserRole/queryUserRoles",queryUserLoginStatistic:"/api/statistic/queryUserLoginStatistic"},roleModule:{getRoleList:"/api/sysRole/queryRole",getRoleListPage:"/api/sysRole/queryRolePage",saveRole:"/api/sysRole/save",deleteRole:"/api/sysRole/delete",saveRoleMenu:"/api/sysRoleMenu/editRoleMenu",saveUserRole:"/api/sysUserRole/editUserRole"},menuModule:{getMenuList:"/api/sysMenu/querySysMenu",saveMenu:"/api/sysMenu/save",deleteMenu:"/api/sysMenu/delete"},projectModule:{getProjectList:"/api/sysProject/queryProjectList",saveProject:"/api/sysProject/save",getProjectListByUser:"/api/sysProject/queryProjectListByUserId",deleteProject:"/api/sysProject/delete"},dictModule:{getDictGroupList:"/api/sysDic/queryDicGroup",saveDictGroup:"/api/sysDic/saveDicGroup",deleteDictGroup:"/api/sysDic/deleteDicGroup",getDictListByKey:"/api/sysDic/queryDicByKey",saveDict:"/api/sysDic/saveDic",deleteDict:"/api/sysDic/deleteDic"},mpsModule:{getMpsList:"/api/measurePoint/queryMeasurePointPage",saveMps:"/api/measurePoint/save",deleteMps:"/api/measurePoint/delete",getMpsSerialNum:"/api/measurePoint/querySerialNum",getMpsMeasureData:"/api/data/queryData",queryAlertHistoryPage:"/api/alert/queryAlertHistoryPage"}},p={userModule:{async login(s){const e=r.userModule.login;return await t().postRequest({url:e,params:s})},async getUserListPage(s){const e=r.userModule.getUserListPage;return await t().getRequest({url:e,params:s})},async saveUser(s){const e=r.userModule.saveUser;return await t().postRequest({url:e,params:s})},async deleteUser(s){const e=r.userModule.deleteUser;return await t().postRequest({url:e,params:s})},async getUserHasRoleList(s){const e=r.userModule.getUserHasRoleList;return await t().getRequest({url:e,params:s})},async queryUserLoginStatistic(s){const e=r.userModule.queryUserLoginStatistic;return await t().getRequest({url:e,params:s})}},roleModule:{async getRoleList(s){const e=r.roleModule.getRoleList;return await t().getRequest({url:e,params:s})},async getRoleListPage(s){const e=r.roleModule.getRoleListPage;return await t().getRequest({url:e,params:s})},async saveRole(s){const e=r.roleModule.saveRole;return await t().postRequest({url:e,params:s})},async deleteRole(s){const e=r.roleModule.deleteRole;return await t().postRequest({url:e,params:s})},async saveRoleMenu(s){const e=r.roleModule.saveRoleMenu;return await t().postRequest({url:e,params:s})},async saveUserRole(s){const e=r.roleModule.saveUserRole;return await t().postRequest({url:e,params:s})}},menuModule:{async getMenuList(s){const e=r.menuModule.getMenuList;return await t().getRequest({url:e,params:s})},async saveMenu(s){const e=r.menuModule.saveMenu;return await t().postRequest({url:e,params:s})},async deleteMenu(s){const e=r.menuModule.deleteMenu;return await t().postRequest({url:e,params:s})}},projectModule:{async getProjectList(s){const e=r.projectModule.getProjectList;return await t().getRequest({url:e,params:s})},async saveProject(s){const e=r.projectModule.saveProject;return await t().postRequest({url:e,params:s})},async getProjectListByUser(s){const e=r.projectModule.getProjectListByUser;return await t().getRequest({url:e,params:s})},async deleteProject(s){const e=r.projectModule.deleteProject;return await t().postRequest({url:e,params:s})}},dictModule:{async getDictGroupList(s){const e=r.dictModule.getDictGroupList;return await t().getRequest({url:e,params:s})},async saveDictGroup(s){const e=r.dictModule.saveDictGroup;return await t().postRequest({url:e,params:s})},async deleteDictGroup(s){const e=r.dictModule.deleteDictGroup;return await t().postRequest({url:e,params:s})},async getDictListByKey(s){const e=r.dictModule.getDictListByKey;return await t().getRequest({url:e,params:s})},async saveDict(s){const e=r.dictModule.saveDict;return await t().postRequest({url:e,params:s})},async deleteDict(s){const e=r.dictModule.deleteDict;return await t().postRequest({url:e,params:s})}},mpsModule:{async getMpsList(s){const e=r.mpsModule.getMpsList;return await t().getRequest({url:e,params:s})},async saveMps(s){const e=r.mpsModule.saveMps;return await t().postRequest({url:e,params:s})},async deleteMps(s){const e=r.mpsModule.deleteMps;return await t().postRequest({url:e,params:s})},async getMpsSerialNum(s){const e=r.mpsModule.getMpsSerialNum;return await t().getRequest({url:e,params:s})},async getMpsMeasureData(s){const e=r.mpsModule.getMpsMeasureData;return await t().getRequest({url:e,params:s})},async queryAlertHistoryPage(s){const e=r.mpsModule.queryAlertHistoryPage;return await t().getRequest({url:e,params:s})}}};export{p as a};
